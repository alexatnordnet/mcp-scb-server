/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

export type GetTableByIdPathParams = {
  /**
   * @description Id
   * @type string
   */
  id: string
}

export type GetTableByIdQueryParams = {
  /**
   * @description The language if the default is not what you want.
   * @type string
   */
  lang?: string | null
}

export const getTableById200TypeEnum = {
  Heading: 'Heading',
  FolderInformation: 'FolderInformation',
  Table: 'Table',
} as const

export type GetTableById200TypeEnum = (typeof getTableById200TypeEnum)[keyof typeof getTableById200TypeEnum]

export const getTableById200CategoryEnum = {
  internal: 'internal',
  public: 'public',
  private: 'private',
  section: 'section',
} as const

export type GetTableById200CategoryEnum = (typeof getTableById200CategoryEnum)[keyof typeof getTableById200CategoryEnum]

export const getTableById200TimeUnitEnum = {
  Annual: 'Annual',
  Quarterly: 'Quarterly',
  Monthly: 'Monthly',
  Weekly: 'Weekly',
  Other: 'Other',
} as const

export type GetTableById200TimeUnitEnum = (typeof getTableById200TimeUnitEnum)[keyof typeof getTableById200TimeUnitEnum]

/**
 * @description Success
 */
export type GetTableById200 = ({
  /**
   * @description One of Heading, Table or FolderInformation
   * @type string
   */
  type: GetTableById200TypeEnum
  /**
   * @type string
   */
  id: string
  /**
   * @description Display text
   * @type string
   */
  label: string | null
  /**
   * @description Longer text describing node.
   * @type string
   */
  description?: string | null
  /**
   * @description String for sorting the contents in folder
   * @type string | undefined
   */
  sortCode?: string
} & {
  /**
   * @type array | undefined
   */
  tags?: string[]
  /**
   * @description Date and time when the figures in the table was last updated, in UTC time.
   * @type string, date-time
   */
  updated: Date | null
  /**
   * @description First period
   * @type string
   */
  firstPeriod: string | null
  /**
   * @description Last period
   * @type string
   */
  lastPeriod: string | null
  /**
   * @description Mostly for internal use. Which category table belongs to. internal, public, private or section.
   * @default "public"
   * @type string | undefined
   */
  category?: GetTableById200CategoryEnum
  /**
   * @description List of varibles name
   * @type array
   */
  variableNames: string[]
  /**
   * @description If the table is discontinued or not. That is if it no longer updated with new figures.
   * @type boolean
   */
  discontinued?: boolean | null
  /**
   * @description The source of the table
   * @type string | undefined
   */
  source?: string
  /**
   * @description The time unit for the table
   * @type string | undefined
   */
  timeUnit?: GetTableById200TimeUnitEnum
  /**
   * @description The path to the table
   * @type array | undefined
   */
  paths?: {
    /**
     * @description The identity of the PathElement
     * @type string
     */
    id: string
    /**
     * @description A textual name for the PathElement
     * @type string
     */
    label: string
  }[][]
  /**
   * @description Links to ...
   * @type array
   */
  links:
    | {
        /**
         * @description the link relation, see https://www.iana.org/assignments/link-relations/link-relations.xhtml
         * @type string
         */
        rel: string
        /**
         * @description The language that is used for the link, see https://moz.com/learn/seo/hreflang-tag
         * @type string
         */
        hreflang: string
        /**
         * @description the link to the resource
         * @type string
         */
        href: string
      }[]
    | null
}) & {
  /**
   * @description The language code (ISO 639) for this response
   * @type string
   */
  language: string
}

/**
 * @description Error response for 400
 */
export type GetTableById400 = {
  /**
   * @description An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n
   * @default "about:blank"
   * @type string | undefined, uri
   */
  type?: string
  /**
   * @description A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n
   * @type string | undefined
   */
  title?: string
  /**
   * @description The HTTP status code generated by the origin server for this occurrence\nof the problem.\n
   * @minLength 100
   * @maxLength 600
   * @type integer | undefined, int32
   */
  status?: number
  /**
   * @description A human readable explanation specific to this occurrence of the\nproblem.\n
   * @type string | undefined
   */
  detail?: string
  /**
   * @description An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n
   * @type string | undefined, uri
   */
  instance?: string
}

/**
 * @description Error response for 404
 */
export type GetTableById404 = {
  /**
   * @description An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n
   * @default "about:blank"
   * @type string | undefined, uri
   */
  type?: string
  /**
   * @description A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n
   * @type string | undefined
   */
  title?: string
  /**
   * @description The HTTP status code generated by the origin server for this occurrence\nof the problem.\n
   * @minLength 100
   * @maxLength 600
   * @type integer | undefined, int32
   */
  status?: number
  /**
   * @description A human readable explanation specific to this occurrence of the\nproblem.\n
   * @type string | undefined
   */
  detail?: string
  /**
   * @description An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n
   * @type string | undefined, uri
   */
  instance?: string
}

/**
 * @description Error response for 429
 */
export type GetTableById429 = {
  /**
   * @description An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n
   * @default "about:blank"
   * @type string | undefined, uri
   */
  type?: string
  /**
   * @description A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n
   * @type string | undefined
   */
  title?: string
  /**
   * @description The HTTP status code generated by the origin server for this occurrence\nof the problem.\n
   * @minLength 100
   * @maxLength 600
   * @type integer | undefined, int32
   */
  status?: number
  /**
   * @description A human readable explanation specific to this occurrence of the\nproblem.\n
   * @type string | undefined
   */
  detail?: string
  /**
   * @description An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n
   * @type string | undefined, uri
   */
  instance?: string
}

export type GetTableByIdQueryResponse = GetTableById200

export type GetTableByIdQuery = {
  Response: GetTableById200
  PathParams: GetTableByIdPathParams
  QueryParams: GetTableByIdQueryParams
  Errors: GetTableById400 | GetTableById404 | GetTableById429
}