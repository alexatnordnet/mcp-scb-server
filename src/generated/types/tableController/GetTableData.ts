/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

export type GetTableDataPathParams = {
  /**
   * @description Id
   * @type string
   */
  id: string
}

export const getTableDataQueryParamsOutputFormatEnum = {
  px: 'px',
  'json-stat2': 'json-stat2',
  csv: 'csv',
  xlsx: 'xlsx',
  html: 'html',
  'json-px': 'json-px',
  parquet: 'parquet',
} as const

export type GetTableDataQueryParamsOutputFormatEnum = (typeof getTableDataQueryParamsOutputFormatEnum)[keyof typeof getTableDataQueryParamsOutputFormatEnum]

export const getTableDataQueryParamsOutputFormatParamsEnum = {
  UseCodes: 'UseCodes',
  UseTexts: 'UseTexts',
  UseCodesAndTexts: 'UseCodesAndTexts',
  IncludeTitle: 'IncludeTitle',
  SeparatorTab: 'SeparatorTab',
  SeparatorSpace: 'SeparatorSpace',
  SeparatorSemicolon: 'SeparatorSemicolon',
} as const

export type GetTableDataQueryParamsOutputFormatParamsEnum =
  (typeof getTableDataQueryParamsOutputFormatParamsEnum)[keyof typeof getTableDataQueryParamsOutputFormatParamsEnum]

export type GetTableDataQueryParams = {
  /**
   * @description The language if the default is not what you want.
   * @type string
   */
  lang?: string | null
  /**
   * @type object | undefined
   */
  valuecodes?: {
    [key: string]: string[]
  }
  /**
   * @type object | undefined
   */
  codelist?: {
    [key: string]: string
  }
  /**
   * @type string | undefined
   */
  outputFormat?: GetTableDataQueryParamsOutputFormatEnum
  /**
   * @type array | undefined
   */
  outputFormatParams?: GetTableDataQueryParamsOutputFormatParamsEnum[]
  /**
   * @description Commaseparated list of variable codes that should be placed in the heading in the resulting data
   * @type array | undefined
   */
  heading?: string[]
  /**
   * @description Commaseparated list of variable codes that should be placed in the stub in the resulting data
   * @type array | undefined
   */
  stub?: string[]
}

/**
 * @description Success
 */
export type GetTableData200 = string

/**
 * @description Error response for 400
 */
export type GetTableData400 = {
  /**
   * @description An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n
   * @default "about:blank"
   * @type string | undefined, uri
   */
  type?: string
  /**
   * @description A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n
   * @type string | undefined
   */
  title?: string
  /**
   * @description The HTTP status code generated by the origin server for this occurrence\nof the problem.\n
   * @minLength 100
   * @maxLength 600
   * @type integer | undefined, int32
   */
  status?: number
  /**
   * @description A human readable explanation specific to this occurrence of the\nproblem.\n
   * @type string | undefined
   */
  detail?: string
  /**
   * @description An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n
   * @type string | undefined, uri
   */
  instance?: string
}

/**
 * @description Error response for 403
 */
export type GetTableData403 = {
  /**
   * @description An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n
   * @default "about:blank"
   * @type string | undefined, uri
   */
  type?: string
  /**
   * @description A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n
   * @type string | undefined
   */
  title?: string
  /**
   * @description The HTTP status code generated by the origin server for this occurrence\nof the problem.\n
   * @minLength 100
   * @maxLength 600
   * @type integer | undefined, int32
   */
  status?: number
  /**
   * @description A human readable explanation specific to this occurrence of the\nproblem.\n
   * @type string | undefined
   */
  detail?: string
  /**
   * @description An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n
   * @type string | undefined, uri
   */
  instance?: string
}

/**
 * @description Error response for 404
 */
export type GetTableData404 = {
  /**
   * @description An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n
   * @default "about:blank"
   * @type string | undefined, uri
   */
  type?: string
  /**
   * @description A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n
   * @type string | undefined
   */
  title?: string
  /**
   * @description The HTTP status code generated by the origin server for this occurrence\nof the problem.\n
   * @minLength 100
   * @maxLength 600
   * @type integer | undefined, int32
   */
  status?: number
  /**
   * @description A human readable explanation specific to this occurrence of the\nproblem.\n
   * @type string | undefined
   */
  detail?: string
  /**
   * @description An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n
   * @type string | undefined, uri
   */
  instance?: string
}

/**
 * @description Error response for 429
 */
export type GetTableData429 = {
  /**
   * @description An absolute URI that identifies the problem type.  When dereferenced,\nit SHOULD provide human-readable documentation for the problem type\n(e.g., using HTML).\n
   * @default "about:blank"
   * @type string | undefined, uri
   */
  type?: string
  /**
   * @description A short, summary of the problem type. Written in english and readable\nfor engineers (usually not suited for non technical stakeholders and\nnot localized); example: Service Unavailable\n
   * @type string | undefined
   */
  title?: string
  /**
   * @description The HTTP status code generated by the origin server for this occurrence\nof the problem.\n
   * @minLength 100
   * @maxLength 600
   * @type integer | undefined, int32
   */
  status?: number
  /**
   * @description A human readable explanation specific to this occurrence of the\nproblem.\n
   * @type string | undefined
   */
  detail?: string
  /**
   * @description An absolute URI that identifies the specific occurrence of the problem.\nIt may or may not yield further information if dereferenced.\n
   * @type string | undefined, uri
   */
  instance?: string
}

export type GetTableDataQueryResponse = GetTableData200

export type GetTableDataQuery = {
  Response: GetTableData200
  PathParams: GetTableDataPathParams
  QueryParams: GetTableDataQueryParams
  Errors: GetTableData400 | GetTableData403 | GetTableData404 | GetTableData429
}