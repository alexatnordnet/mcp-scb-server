/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

export const codeListsTypeEnum3 = {
  Aggregation: 'Aggregation',
  Valueset: 'Valueset',
} as const

export type CodeListsTypeEnum3 = (typeof codeListsTypeEnum3)[keyof typeof codeListsTypeEnum3]

export const measuringTypeEnum2 = {
  Stock: 'Stock',
  Flow: 'Flow',
  Average: 'Average',
  Other: 'Other',
} as const

export type MeasuringTypeEnum2 = (typeof measuringTypeEnum2)[keyof typeof measuringTypeEnum2]

export const priceTypeEnum2 = {
  NotApplicable: 'NotApplicable',
  Current: 'Current',
  Fixed: 'Fixed',
} as const

export type PriceTypeEnum2 = (typeof priceTypeEnum2)[keyof typeof priceTypeEnum2]

export const adjustmentEnum2 = {
  None: 'None',
  SesOnly: 'SesOnly',
  WorkOnly: 'WorkOnly',
  WorkAndSes: 'WorkAndSes',
} as const

export type AdjustmentEnum2 = (typeof adjustmentEnum2)[keyof typeof adjustmentEnum2]

/**
 * @description Specification on json-stat.org -> [here](https://json-stat.org/full/#dimension)
 */
export type Dimension = {
  [key: string]: {
    /**
     * @description Specification on json-stat.org -> [here](https://json-stat.org/full/#label)
     * @type string | undefined
     */
    label?: string
    /**
     * @description Notes for variable
     * @type array | undefined
     */
    note?: string[]
    /**
     * @description Specification on json-stat.org -> [here](https://json-stat.org/full/#category)
     * @type object | undefined
     */
    category?: {
      /**
       * @description Specification on json-stat.org -> [here](https://json-stat.org/full/#index)
       * @type object | undefined
       */
      index?: {
        [key: string]: number
      }
      /**
       * @description Specification on json-stat.org -> [here](https://json-stat.org/full/#label)
       * @type object | undefined
       */
      label?: {
        [key: string]: string
      }
      /**
       * @description Notes for values
       * @type object | undefined
       */
      note?: {
        [key: string]: string[]
      }
      /**
       * @description Specification on json-stat.org -> [here](https://json-stat.org/full/#child)
       * @type object | undefined
       */
      child?: {
        [key: string]: string[]
      }
      /**
       * @description Specification on json-stat.org -> [here](https://json-stat.org/full/#unit)
       * @type object | undefined
       */
      unit?: {
        [key: string]: {
          /**
           * @description It is the base unit (person, gram, euro, etc.).
           * @type string | undefined
           */
          base?: string
          /**
           * @description Number of decimals
           * @type integer | undefined
           */
          decimals?: number
        }
      }
    }
    /**
     * @description extension at dimension
     * @type object | undefined
     */
    extension?: {
      /**
       * @description Can dimension be elminated
       * @type boolean | undefined
       */
      elimination?: boolean
      /**
       * @description Elimination value code
       * @type string | undefined
       */
      eliminationValueCode?: string
      /**
       * @description Describes if a note of a certain index is mandatory.
       * @type object | undefined
       */
      noteMandatory?: {
        [key: string]: boolean
      }
      /**
       * @description Describes which value note are mandatory
       * @type object | undefined
       */
      categoryNoteMandatory?: {
        [key: string]: {
          [key: string]: boolean
        }
      }
      /**
       * @description Text with information on the exact period for the statistics
       * @type object | undefined
       */
      refperiod?: {
        [key: string]: string
      }
      /**
       * @description Information about how variables are presented
       * @type string | undefined
       */
      show?: string
      /**
       * @description Available codelists for this dimension
       * @type array | undefined
       */
      codeLists?: {
        /**
         * @description The identity of the CodeList
         * @type string
         */
        id: string
        /**
         * @description A textual name for the CodeList
         * @type string
         */
        label: string
        /**
         * @description Type of codelist
         * @type string
         */
        type: CodeListsTypeEnum3
        /**
         * @description Links to associated information about the code list
         * @type array
         */
        links: {
          /**
           * @description the link relation, see https://www.iana.org/assignments/link-relations/link-relations.xhtml
           * @type string
           */
          rel: string
          /**
           * @description The language that is used for the link, see https://moz.com/learn/seo/hreflang-tag
           * @type string
           */
          hreflang: string
          /**
           * @description the link to the resource
           * @type string
           */
          href: string
        }[]
      }[]
      /**
       * @description Indicates if data is stock, flow or average.
       * @type object | undefined
       */
      measuringType?: {
        [key: string]: MeasuringTypeEnum2
      }
      /**
       * @description Indicates if data is in current or fixed prices.
       * @type object | undefined
       */
      priceType?: {
        [key: string]: PriceTypeEnum2
      }
      /**
       * @description Describes adjustments made to the data
       * @type object | undefined
       */
      adjustment?: {
        [key: string]: AdjustmentEnum2
      }
      /**
       * @description Base period for, for instance index series. Is shown with the footnote. If there is a contents variable the keyword is repeated for each value of the contents variable.
       * @type object | undefined
       */
      basePeriod?: {
        [key: string]: string
      }
    }
    /**
     * @type object | undefined
     */
    link?: {
      /**
       * @type array | undefined
       */
      describedby?: {
        /**
         * @description A extension object
         * @type object | undefined
         */
        extension?: {
          [key: string]: string
        }
      }[]
    }
  }
}