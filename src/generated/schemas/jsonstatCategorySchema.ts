/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { JsonstatCategory } from '../types/JsonstatCategory.ts'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

export const jsonstatCategorySchema = z.object({
  index: z.object({}).catchall(z.number().int()).describe('Specification on json-stat.org -> [here](https://json-stat.org/full/#index)').optional(),
  label: z.object({}).catchall(z.string()).describe('Specification on json-stat.org -> [here](https://json-stat.org/full/#label)').optional(),
  note: z
    .object({})
    .catchall(z.array(z.string()).describe('Spesification on json-stat.org -> [here](https://json-stat.org/full/#note)'))
    .describe('Notes for values')
    .optional(),
  child: z
    .object({})
    .catchall(z.array(z.string()).refine((items) => new Set(items).size === items.length, { message: 'Array entries must be unique' }))
    .describe('Specification on json-stat.org -> [here](https://json-stat.org/full/#child)')
    .optional(),
  unit: z
    .object({})
    .catchall(
      z.object({
        base: z.string().describe('It is the base unit (person, gram, euro, etc.).').optional(),
        decimals: z.number().int().describe('Number of decimals').optional(),
      }),
    )
    .describe('Specification on json-stat.org -> [here](https://json-stat.org/full/#unit)')
    .optional(),
}) as unknown as ToZod<JsonstatCategory>