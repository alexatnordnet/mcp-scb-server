/**
 * Generated by Kubb (https://kubb.dev/).
 * Do not edit manually.
 */

import type { ConfigResponse } from '../types/ConfigResponse.ts'
import type { ToZod } from '@kubb/plugin-zod/utils'
import { z } from 'zod'

/**
 * @description API configuration
 */
export const configResponseSchema = z
  .object({
    apiVersion: z.string().describe('The version of the API spesification'),
    appVersion: z.string().describe('The version of the API implementation'),
    languages: z
      .array(
        z
          .object({
            id: z.string().describe('The language ISO code'),
            label: z.string().describe('The name of the language'),
          })
          .describe('Language information'),
      )
      .describe('A list of language that exists for the data.'),
    defaultLanguage: z.string().describe('The id of the language that is the default language.'),
    maxDataCells: z.number().int().min(0).describe('A threshold of how many datacells that can be fetched in a single API call'),
    maxCallsPerTimeWindow: z.number().int().min(1).describe('The maximum number of call to the API for a time window indicated by timeWindow.'),
    timeWindow: z.number().int().min(1).describe('The time window restricting how many call that can be done.'),
    license: z.string().describe('The license that the data is provided.'),
    sourceReferences: z
      .array(
        z
          .object({
            language: z.string().describe('The language id'),
            text: z.string().describe('The text that should be displayed'),
          })
          .describe('How data should be cite for a specific language'),
      )
      .describe('A list of how the data should be cite for diffrent languages.')
      .optional(),
    defaultDataFormat: z.string().describe('The default data format to used when no format is specified in the request.'),
    dataFormats: z.array(z.string()).describe('List of available data formts for fetching data in.'),
    features: z
      .array(
        z.object({
          id: z.string().describe('The identifyer for the feature'),
          params: z
            .array(
              z.object({
                key: z.string().describe('The key'),
                value: z.string().describe('The value associated with the key'),
              }),
            )
            .optional(),
        }),
      )
      .describe('A list of features for the API')
      .optional(),
  })
  .describe('API configuration') as unknown as ToZod<ConfigResponse>